{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Database.Hbx.Proto.Resultset (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".Mysqlx.Resultset\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\"], baseName = MName \"Resultset\"}, protoFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset.hs\"], protoSource = \"src/mysqlx_resultset.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.FetchDoneMoreOutParams\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\"], baseName = MName \"FetchDoneMoreOutParams\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"FetchDoneMoreOutParams.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.FetchDoneMoreResultsets\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\"], baseName = MName \"FetchDoneMoreResultsets\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"FetchDoneMoreResultsets.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.FetchDone\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\"], baseName = MName \"FetchDone\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"FetchDone.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.ColumnMetaData\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\"], baseName = MName \"ColumnMetaData\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"ColumnMetaData.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.type\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"type'\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Resultset.ColumnMetaData.FieldType\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName = MName \"FieldType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.name\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"name\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.original_name\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"original_name\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.table\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"table\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.original_table\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"original_table\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.schema\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"schema\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.catalog\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"catalog\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.collation\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"collation\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.fractional_digits\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"fractional_digits\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.length\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"length\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.flags\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"flags\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.ColumnMetaData.content_type\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName' = FName \"content_type\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.Row\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\"], baseName = MName \"Row\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"Row.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Resultset.Row.field\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"Row\"], baseName' = FName \"field\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".Mysqlx.Resultset.ColumnMetaData.FieldType\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Resultset\",MName \"ColumnMetaData\"], baseName = MName \"FieldType\"}, enumFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Resultset\",\"ColumnMetaData\",\"FieldType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"SINT\"),(EnumCode {getEnumCode = 2},\"UINT\"),(EnumCode {getEnumCode = 5},\"DOUBLE\"),(EnumCode {getEnumCode = 6},\"FLOAT\"),(EnumCode {getEnumCode = 7},\"BYTES\"),(EnumCode {getEnumCode = 10},\"TIME\"),(EnumCode {getEnumCode = 12},\"DATETIME\"),(EnumCode {getEnumCode = 15},\"SET\"),(EnumCode {getEnumCode = 16},\"ENUM\"),(EnumCode {getEnumCode = 17},\"BIT\"),(EnumCode {getEnumCode = 18},\"DECIMAL\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\216\EOT\n\SUBsrc/mysqlx_resultset.proto\DC2\DLEMysqlx.Resultset\"\CAN\n\SYNFetchDoneMoreOutParams\"\EM\n\ETBFetchDoneMoreResultsets\"\v\n\tFetchDone\"\159\ETX\n\SOColumnMetaData\DC28\n\EOTtype\CAN\SOH \STX(\SO2*.Mysqlx.Resultset.ColumnMetaData.FieldType\DC2\f\n\EOTname\CAN\STX \SOH(\f\DC2\NAK\n\roriginal_name\CAN\ETX \SOH(\f\DC2\r\n\ENQtable\CAN\EOT \SOH(\f\DC2\SYN\n\SOoriginal_table\CAN\ENQ \SOH(\f\DC2\SO\n\ACKschema\CAN\ACK \SOH(\f\DC2\SI\n\acatalog\CAN\a \SOH(\f\DC2\DC1\n\tcollation\CAN\b \SOH(\EOT\DC2\EM\n\DC1fractional_digits\CAN\t \SOH(\r\DC2\SO\n\ACKlength\CAN\n \SOH(\r\DC2\r\n\ENQflags\CAN\v \SOH(\r\DC2\DC4\n\fcontent_type\CAN\f \SOH(\r\"\130\SOH\n\tFieldType\DC2\b\n\EOTSINT\DLE\SOH\DC2\b\n\EOTUINT\DLE\STX\DC2\n\n\ACKDOUBLE\DLE\ENQ\DC2\t\n\ENQFLOAT\DLE\ACK\DC2\t\n\ENQBYTES\DLE\a\DC2\b\n\EOTTIME\DLE\n\DC2\f\n\bDATETIME\DLE\f\DC2\a\n\ETXSET\DLE\SI\DC2\b\n\EOTENUM\DLE\DLE\DC2\a\n\ETXBIT\DLE\DC1\DC2\v\n\aDECIMAL\DLE\DC2\"\DC4\n\ETXRow\DC2\r\n\ENQfield\CAN\SOH \ETX(\fB.\n\FSdatabase.hbx.proto.resultsetH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL")