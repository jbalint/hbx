{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Database.Hbx.Proto.Notice (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".Mysqlx.Notice\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\"], baseName = MName \"Notice\"}, protoFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice.hs\"], protoSource = \"src/mysqlx_notice.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Notice.Frame\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\"], baseName = MName \"Frame\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"Frame.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Frame.type\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Frame\"], baseName' = FName \"type'\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Frame.scope\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Frame\"], baseName' = FName \"scope\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Notice.Frame.Scope\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Frame\"], baseName = MName \"Scope\"}), hsRawDefault = Just \"GLOBAL\", hsDefault = Just (HsDef'Enum \"GLOBAL\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Frame.payload\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Frame\"], baseName' = FName \"payload\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Notice.Warning\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\"], baseName = MName \"Warning\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"Warning.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Warning.level\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Warning\"], baseName' = FName \"level\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Notice.Warning.Level\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Warning\"], baseName = MName \"Level\"}), hsRawDefault = Just \"WARNING\", hsDefault = Just (HsDef'Enum \"WARNING\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Warning.code\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Warning\"], baseName' = FName \"code\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.Warning.msg\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Warning\"], baseName' = FName \"msg\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Notice.SessionVariableChanged\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\"], baseName = MName \"SessionVariableChanged\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"SessionVariableChanged.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.SessionVariableChanged.param\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionVariableChanged\"], baseName' = FName \"param\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.SessionVariableChanged.value\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionVariableChanged\"], baseName' = FName \"value\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Datatypes.Scalar\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Datatypes\"], baseName = MName \"Scalar\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Mysqlx.Notice.SessionStateChanged\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\"], baseName = MName \"SessionStateChanged\"}, descFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"SessionStateChanged.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.SessionStateChanged.param\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionStateChanged\"], baseName' = FName \"param\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Notice.SessionStateChanged.Parameter\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionStateChanged\"], baseName = MName \"Parameter\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Mysqlx.Notice.SessionStateChanged.value\", haskellPrefix' = [], parentModule' = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionStateChanged\"], baseName' = FName \"value\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".Mysqlx.Datatypes.Scalar\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Datatypes\"], baseName = MName \"Scalar\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".Mysqlx.Notice.Frame.Scope\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Frame\"], baseName = MName \"Scope\"}, enumFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"Frame\",\"Scope.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"GLOBAL\"),(EnumCode {getEnumCode = 2},\"LOCAL\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Mysqlx.Notice.Warning.Level\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"Warning\"], baseName = MName \"Level\"}, enumFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"Warning\",\"Level.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"NOTE\"),(EnumCode {getEnumCode = 2},\"WARNING\"),(EnumCode {getEnumCode = 3},\"ERROR\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".Mysqlx.Notice.SessionStateChanged.Parameter\", haskellPrefix = [], parentModule = [MName \"Database\",MName \"Hbx\",MName \"Proto\",MName \"Notice\",MName \"SessionStateChanged\"], baseName = MName \"Parameter\"}, enumFilePath = [\"Database\",\"Hbx\",\"Proto\",\"Notice\",\"SessionStateChanged\",\"Parameter.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"CURRENT_SCHEMA\"),(EnumCode {getEnumCode = 2},\"ACCOUNT_EXPIRED\"),(EnumCode {getEnumCode = 3},\"GENERATED_INSERT_ID\"),(EnumCode {getEnumCode = 4},\"ROWS_AFFECTED\"),(EnumCode {getEnumCode = 5},\"ROWS_FOUND\"),(EnumCode {getEnumCode = 6},\"ROWS_MATCHED\"),(EnumCode {getEnumCode = 7},\"TRX_COMMITTED\"),(EnumCode {getEnumCode = 9},\"TRX_ROLLEDBACK\"),(EnumCode {getEnumCode = 10},\"PRODUCED_MESSAGE\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\130\ACK\n\ETBsrc/mysqlx_notice.proto\DC2\rMysqlx.Notice\SUB\SYNmysqlx_datatypes.proto\"y\n\ENQFrame\DC2\f\n\EOTtype\CAN\SOH \STX(\r\DC21\n\ENQscope\CAN\STX \SOH(\SO2\SUB.Mysqlx.Notice.Frame.Scope:\ACKGLOBAL\DC2\SI\n\apayload\CAN\ETX \SOH(\f\"\RS\n\ENQScope\DC2\n\n\ACKGLOBAL\DLE\SOH\DC2\t\n\ENQLOCAL\DLE\STX\"\133\SOH\n\aWarning\DC24\n\ENQlevel\CAN\SOH \SOH(\SO2\FS.Mysqlx.Notice.Warning.Level:\aWARNING\DC2\f\n\EOTcode\CAN\STX \STX(\r\DC2\v\n\ETXmsg\CAN\ETX \STX(\t\")\n\ENQLevel\DC2\b\n\EOTNOTE\DLE\SOH\DC2\v\n\aWARNING\DLE\STX\DC2\t\n\ENQERROR\DLE\ETX\"P\n\SYNSessionVariableChanged\DC2\r\n\ENQparam\CAN\SOH \STX(\t\DC2'\n\ENQvalue\CAN\STX \SOH(\v2\CAN.Mysqlx.Datatypes.Scalar\"\189\STX\n\DC3SessionStateChanged\DC2;\n\ENQparam\CAN\SOH \STX(\SO2,.Mysqlx.Notice.SessionStateChanged.Parameter\DC2'\n\ENQvalue\CAN\STX \SOH(\v2\CAN.Mysqlx.Datatypes.Scalar\"\191\SOH\n\tParameter\DC2\DC2\n\SOCURRENT_SCHEMA\DLE\SOH\DC2\DC3\n\SIACCOUNT_EXPIRED\DLE\STX\DC2\ETB\n\DC3GENERATED_INSERT_ID\DLE\ETX\DC2\DC1\n\rROWS_AFFECTED\DLE\EOT\DC2\SO\n\nROWS_FOUND\DLE\ENQ\DC2\DLE\n\fROWS_MATCHED\DLE\ACK\DC2\DC1\n\rTRX_COMMITTED\DLE\a\DC2\DC2\n\SOTRX_ROLLEDBACK\DLE\t\DC2\DC4\n\DLEPRODUCED_MESSAGE\DLE\nB+\n\EMdatabase.hbx.proto.noticeH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL")